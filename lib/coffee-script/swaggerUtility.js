// Generated by CoffeeScript 1.7.1
(function() {
  var SwaggerUtility;

  SwaggerUtility = (function() {
    var DONE, IN_SWAG, WAITING;

    WAITING = 0;

    IN_SWAG = 1;

    DONE = 2;

    function SwaggerUtility() {
      this.lines = [];
      this.state = WAITING;
      this.swagLines = [];
    }

    SwaggerUtility.prototype.addLine = function(line) {
      line = this.cleanLine(line);
      this.lines.push(line);
      switch (this.state) {
        case WAITING:
          if (this.isSwaggerable(line)) {
            line = this.getSwaggerablePortion(line);
            if (this.isSwaggerStartLine(line)) {
              this.state = IN_SWAG;
            }
          }
          break;
        case IN_SWAG:
          if (this.isSwaggerable(line)) {
            this.swagLines.push(this.getSwaggerablePortion(line, false));
          } else {
            this.state = DONE;
          }
          break;
        case DONE:
          this.noop();
      }
      return this;
    };

    SwaggerUtility.prototype.noop = function() {};

    SwaggerUtility.prototype.getSwaggerDoc = function() {
      return this.swagLines.join("\n");
    };

    SwaggerUtility.prototype.reset = function() {
      this.lines = [];
      this.state = WAITING;
      return this.swagLines = [];
    };

    SwaggerUtility.prototype.cleanLine = function(line) {
      line = line.trim();
      return line;
    };

    SwaggerUtility.prototype.isSwaggerable = function(line) {
      return line[0] === "*";
    };

    SwaggerUtility.prototype.getSwaggerablePortion = function(line, doTrim) {
      line = line.slice(line.indexOf("*") + 1);
      if ((doTrim != null) && (!doTrim)) {
        return line;
      }
      return line.trim();
    };

    SwaggerUtility.prototype.isSwaggerStartLine = function(line) {
      return line === "@swagger";
    };

    return SwaggerUtility;

  })();

  module.exports = SwaggerUtility;

}).call(this);
